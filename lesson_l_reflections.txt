How did viewing a diff between two versions of a file help you see the bug that was introduced?

	By marking the +++ next to it, denoting the change.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	Quickly reverting back to a stable build and clearly seeing the changes made instead of hunting for the bug.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

	There's more control over comits and changes can be more easily understood but it's always a judgement call and must remember to save.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Because multiple files are usually needed for a functioning program whereas a simple word document only needs to be one document.

How can you use the commands git log and git diff to view the history of files?

	By overviewing the commit notes, copying the commit ID's, and pasting two of them after # git diff to see red/green highlighted changes.

How might using version control make you more confident to make changes that could break something?

	Because I can always revert to a working build and see what changes might have broke things.

Now that you have your workspace set up, what do you want to try using Git for?

	Going back and forth from laptop to desktop and working on the same udacity project without carrying a usb stick with the entire intellij files everywhere.

